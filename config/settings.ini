; Sample configuration for IBKR connection
[ibkr]
; Hostname or IP for your IBKR Gateway/TWS (usually 127.0.0.1)
host = 127.0.0.1
; Gateway/TWS port (4002 paper, 4001 live)
port = 4002
; Unique API client ID (any non-negative integer not used by other sessions)
client_id = 1
; true blocks trading, false enables order placement
read_only = false
 
[accounts]
; List of IBKR account IDs (e.g., DU123456 for paper or U123456 for live)
; portfolios.csv is shared across accounts
ids = DU111111, DU222222
; per_account | global
confirm_mode = per_account
; Minimum seconds between account operations (0 disables pacing)
pacing_sec = 5
; Process accounts concurrently when true; confirmations serialize only when prompts are shown (i.e., without --yes); parallel execution only activates when parallel = false AND pacing_sec == 0
parallel = false
; portfolio CSV (relative to this file)
path = portfolios.csv

; Example per-account overrides
[account:DU111111]
; relative to this file
path = portfolios_DU111111.csv
;allow_fractional = true       ; override [rebalance] allow_fractional
;cash_buffer_type = abs         ; override [rebalance] cash_buffer_type
;cash_buffer_abs = 200
; Unspecified keys fall back to global values

[models]
; Weight for SMURF model (0-1, weights must sum to 1.0)
smurf = 0.50
; Weight for BADASS model (0-1, weights must sum to 1.0)
badass = 0.30
; Weight for GLTR model (0-1, weights must sum to 1.0)
gltr  = 0.20

[rebalance]
; per_holding | total_drift
trigger_mode = per_holding
; Trade if |drift| > this bps (e.g., 50). A basis point is 0.01%, so 50 basis points is equal to 0.50%. 
per_holding_band_bps = 50
; Used when trigger_mode=total_drift
portfolio_total_band_bps = 100
; Ignore trades below this USD amount
min_order_usd = 50
; Cash buffer configuration
;   cash_buffer_type = pct | abs
;   when pct: reserve this fraction of NetLiq as cash (0.01 = 1%)
;   when abs: reserve this absolute USD amount
cash_buffer_type = pct
cash_buffer_pct = 0.01
cash_buffer_abs = 0
; true allows fractional shares
allow_fractional = false
; Max gross exposure multiple (e.g., 1.5 = 150%)
max_leverage = 1.50
; Placeholder maintenance margin buffer (not enforced, 0.10 = 10%)
maintenance_buffer_pct = 0.10
; Regular trading hours (rth) or extended trading hours (eth)
trading_hours = rth
;After initial trades fill, the rebalance loop now re-evaluates leftover cash, recalculates drift, and submits additional batches until cash drops below min_order_usd or the pass limit is reached
max_passes = 3

[pricing]
; Price field: last | close | bid | ask
price_source = last
; Only works with true, meaning use market data or retry via paid real-time snapshot (using IBKR’s $0.01 / $0.03 per-quote model
fallback_to_snapshot = true

[execution]
; Order type (market only)
order_type = market
; Preferred algo: none | adaptive | midprice.
; 'midprice' uses IBKR's MIDPRICE order type pegged to the NBBO midpoint
; and may be rejected if the account lacks entitlement or the venue does
; not support midpoint orders. Use 'none' for plain market orders. For
; execution certainty (e.g., rebalancing portfolios) use Adaptive. Use
; Midprice when spreads are wide, liquidity is decent, and you want cost
; savings but risk not being filled.
algo_preference = none
; true falls back to plain market if algo fails
fallback_plain_market = true
; Seconds to wait before canceling and retrying as plain market
wait_before_fallback = 300
; true submits orders in batches
batch_orders = true
; Seconds to wait for commission reports before giving up
commission_report_timeout = 5.0

[io]
; Directory for CSV reports and logs
report_dir = reports
; Logging level: DEBUG | INFO | WARNING | ERROR | CRITICAL
log_level = INFO


